{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/dayjs/dayjs.min.js","webpack:///./src/main.js","webpack:///./src/mock/comment.js","webpack:///./src/mock/film-data.js","webpack:///./src/mock/filters.js","webpack:///./src/presenter/movie.js","webpack:///./src/presenter/movies-list.js","webpack:///./src/utils/common.js","webpack:///./src/utils/const.js","webpack:///./src/utils/date-time.js","webpack:///./src/utils/render.js","webpack:///./src/view/abstract.js","webpack:///./src/view/films-list.js","webpack:///./src/view/films-wrapper.js","webpack:///./src/view/filters.js","webpack:///./src/view/footer-stats.js","webpack:///./src/view/movie-card.js","webpack:///./src/view/popup.js","webpack:///./src/view/show-more.js","webpack:///./src/view/smart.js","webpack:///./src/view/sort-menu.js","webpack:///./src/view/user-rank.js"],"names":[],"mappings":"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,4BAA4B,yEAAgB;AAC5C;;AAEA;AACA;AACA,sCAAsC,yEAAgB;AACtD;;AAEA;AACA;AACA,kCAAkC,yEAAgB;AAClD;;AAEA;AACA;AACA,4BAA4B,yEAAgB,cAAc,yEAAgB,SAAS,yEAAgB,SAAS,yEAAgB,SAAS,yEAAgB;;AAErJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC9DzB;AAAA;AAAA;AAAA;AAAoD;AACK;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAA0B,yEAAgB;AAC1C;;AAEA;AACA;AACA,yBAAyB,yEAAgB;AACzC;;AAEA;AACA;AACA,UAAU,yEAAgB;AAC1B;;AAEA;AACA;AACA;AACA,yBAAyB,yEAAgB;AACzC;;AAEA,iBAAiB,oBAAoB;AACrC,8CAA8C,yEAAgB;AAC9D;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,yEAAgB;;AAEnC;AACA,iBAAiB,cAAc;AAC/B,oCAAoC,yEAAgB;AACpD;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,yEAAgB,cAAc,yEAAgB,SAAS,yEAAgB;AACzF;;AAEA;AACA;AACA,SAAS,8EAAkB,CAAC,yEAAgB;AAC5C;;AAEA;AACA;AACA,4BAA4B,yEAAgB;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,yEAAgB;AAC9C;;AAEA;AACA;AACA,4BAA4B,yEAAgB;AAC5C;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yEAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yEAAgB;AACvC,8BAA8B,yEAAgB;AAC9C,2BAA2B,yEAAgB;AAC3C;AACA;;AAE0B;;;;;;;;;;;;;;;;AC7J1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEyB;;;;;;;;;;;;;AChCzB;AAAA;AAAA;AAAA;AAAA;AAA2E;;AAEzB;AACT;;AAE1B;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,2DAAa;AAC3C,6BAA6B,sDAAS;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,gEAAO;AACb;;AAEA;AACA,MAAM,gEAAO;AACb,MAAM,+DAAM;AACZ;AACA;AACA;;AAEA,IAAI,+DAAM;;AAEV;;AAEA;AACA;AACA,IAAI,+DAAM;AACV,IAAI,+DAAM;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,+DAAM,uCAAuC,+DAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,gBAAgB,kCAAkC;AACvF;;AAEA;AACA;AACA,qCAAqC,gBAAgB,gDAAgD;AACrG;;AAEA;AACA;AACA,qCAAqC,gBAAgB,0CAA0C;AAC/F;AACA;;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACR;AACf;AACM;AACA;;AAEK;AACP;AACS;AAChB;AACQ;;AAEG;;;AAGnD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,yDAAQ;AAClC;AACA;;AAEA,0BAA0B,yDAAQ;AAClC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6BAA6B,yDAAQ;AACrC;AACA;AACA;AACA;AACA;;AAUE;;;;;;;;;;;;;ACpFF;AAAA;AAAA;AAAiD;;AAElC;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,sEAAa;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAqC;;AAErC;AACA,SAAS,yBAAyB;AAClC;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL,qCAAqC;AACrC;AACA;AACA,KAAK,IAAI,MAAM;;AAEf;;AAEA;AACA;AACA;AACA;;;AAGe,wBAAwB,oDAAQ;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;;AAEe,2BAA2B,oDAAY;AACtD;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAyC;AACK;;AAE9C;AACA,SAAS,YAAY;;AAErB;AACA;AACA,eAAe,KAAK;AACpB,qCAAqC;AACrC;AACA,WAAW;AACX;AACA,QAAQ,2DAAW;;AAEnB,QAAQ;AACR;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;;AAGe,sBAAsB,oDAAY;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAyC;;AAEzC;AACA,eAAe,OAAO;AACtB;;AAEe,0BAA0B,oDAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACC;AACP;;AAEzC;AACA,OAAO,0HAA0H;;AAEjI;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,qEAAY;AACvC;;AAEA;AACA;AACA,uCAAuC,MAAM;AAC7C,uCAAuC,KAAK;AAC5C;AACA,0CAA0C,oEAAQ,cAAc;AAChE,8CAA8C,SAAS;AACvD,2CAA2C,MAAM;AACjD;AACA,oBAAoB,MAAM,SAAS,MAAM;AACzC,4CAA4C,iBAAiB;AAC7D,yCAAyC,cAAc;AACvD;AACA,aAAa,eAAe,yBAAyB;AACrD;AACA,oFAAoF;AACpF,UAAU;AACV;AACA,eAAe;AACf,yBAAyB,KAAK;AAC9B;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEe,wBAAwB,oDAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAChB;AACD;AACX;;;AAGnC;AACA;;AAEA;AACA;AACA,uCAAuC,2DAAW,aAAa;AAC/D,uCAAuC,OAAO;AAC9C;AACA;;AAEA;AACA;AACA,iHAAiH,MAAM,WAAW,MAAM;AACxI,iEAAiE,MAAM;AACvE,uCAAuC,MAAM;AAC7C;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,0BAA0B;;AAEnC;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,gDAAgD,KAAK;AACrD;AACA,uDAAuD,OAAO;AAC9D,oDAAoD,wEAAY,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,sNAAsN;;AAE/N;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mFAAmF,KAAK;;AAExF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,MAAM;;AAEjE,6CAA6C,eAAe;AAC5D;;AAEA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D,sEAAsE,cAAc;AACpF;;AAEA;AACA,0DAA0D,KAAK;AAC/D;AACA;;AAEA;AACA,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB,6BAA6B,sEAAU;AACzD,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,cAAc,eAAe,yBAAyB;AACtD;AACA,6FAA6F,SAAS,UAAU,SAAS,IAAI;AAC7H;AACA,eAAe;AACf,0BAA0B,SAAS,oEAAoE,SAAS,IAAI,KAAK;AACzH;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,2GAA2G,gBAAgB;;AAE3H;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,gBAAgB;AAChB,oCAAoC,aAAa,0CAA0C,aAAa;AACxG;AACA;;AAEA;AACA,0IAA0I;AAC1I,WAAW,WAAW;AACtB;;AAEA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oBAAoB,iDAAS;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,4DAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACtVA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;;AAEe,6BAA6B,oDAAY;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAyC;;AAE1B,oBAAoB,oDAAY;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAyC;AACE;;AAE3C;AACA;AACA;AACA,iFAAiF,wDAAQ,SAAS;AAClG,4DAA4D,wDAAQ,SAAS;AAC7E,4DAA4D,wDAAQ,SAAS;AAC7E;AACA;AACA;;AAEe,uBAAuB,oDAAY;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uBAAuB,oDAAY;AAClD;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.dayjs=e()}(this,function(){\"use strict\";var t=\"millisecond\",e=\"second\",n=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",a=\"quarter\",o=\"year\",f=\"date\",h=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d+)?$/,c=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},$=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},l={s:$,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+$(r,2,\"0\")+\":\"+$(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,u),s=n-i<0,a=e.clone().add(r+(s?-1:1),u);return+(-(r+(n-i)/(s?i-a:a-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:o,w:s,d:i,D:f,h:r,m:n,s:e,ms:t,Q:a}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},y=\"en\",M={};M[y]=d;var m=function(t){return t instanceof S},D=function(t,e,n){var r;if(!t)return y;if(\"string\"==typeof t)M[t]&&(r=t),e&&(M[t]=e,r=t);else{var i=t.name;M[i]=t,r=i}return!n&&r&&(y=r),r||!n&&y},v=function(t,e){if(m(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new S(n)},g=l;g.l=D,g.i=m,g.w=function(t,e){return v(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var S=function(){function d(t){this.$L=D(t.locale,null,!0),this.parse(t)}var $=d.prototype;return $.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(g.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(h);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},$.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},$.$utils=function(){return g},$.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},$.isSame=function(t,e){var n=v(t);return this.startOf(e)<=n&&n<=this.endOf(e)},$.isAfter=function(t,e){return v(t)<this.startOf(e)},$.isBefore=function(t,e){return this.endOf(e)<v(t)},$.$g=function(t,e,n){return g.u(t)?this[e]:this.set(n,t)},$.unix=function(){return Math.floor(this.valueOf()/1e3)},$.valueOf=function(){return this.$d.getTime()},$.startOf=function(t,a){var h=this,c=!!g.u(a)||a,d=g.p(t),$=function(t,e){var n=g.w(h.$u?Date.UTC(h.$y,e,t):new Date(h.$y,e,t),h);return c?n:n.endOf(i)},l=function(t,e){return g.w(h.toDate()[t].apply(h.toDate(\"s\"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),h)},y=this.$W,M=this.$M,m=this.$D,D=\"set\"+(this.$u?\"UTC\":\"\");switch(d){case o:return c?$(1,0):$(31,11);case u:return c?$(1,M):$(0,M+1);case s:var v=this.$locale().weekStart||0,S=(y<v?y+7:y)-v;return $(c?m-S:m+(6-S),M);case i:case f:return l(D+\"Hours\",0);case r:return l(D+\"Minutes\",1);case n:return l(D+\"Seconds\",2);case e:return l(D+\"Milliseconds\",3);default:return this.clone()}},$.endOf=function(t){return this.startOf(t,!1)},$.$set=function(s,a){var h,c=g.p(s),d=\"set\"+(this.$u?\"UTC\":\"\"),$=(h={},h[i]=d+\"Date\",h[f]=d+\"Date\",h[u]=d+\"Month\",h[o]=d+\"FullYear\",h[r]=d+\"Hours\",h[n]=d+\"Minutes\",h[e]=d+\"Seconds\",h[t]=d+\"Milliseconds\",h)[c],l=c===i?this.$D+(a-this.$W):a;if(c===u||c===o){var y=this.clone().set(f,1);y.$d[$](l),y.init(),this.$d=y.set(f,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},$.set=function(t,e){return this.clone().$set(t,e)},$.get=function(t){return this[g.p(t)]()},$.add=function(t,a){var f,h=this;t=Number(t);var c=g.p(a),d=function(e){var n=v(h);return g.w(n.date(n.date()+Math.round(e*t)),h)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(f={},f[n]=6e4,f[r]=36e5,f[e]=1e3,f)[c]||1,l=this.$d.getTime()+t*$;return g.w(l,this)},$.subtract=function(t,e){return this.add(-1*t,e)},$.format=function(t){var e=this;if(!this.isValid())return\"Invalid Date\";var n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=g.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,f=i.months,h=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return g.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:g.s(a+1,2,\"0\"),MMM:h(i.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:g.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,o,2),ddd:h(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:g.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:g.s(u,2,\"0\"),s:String(this.$s),ss:g.s(this.$s,2,\"0\"),SSS:g.s(this.$ms,3,\"0\"),Z:r};return n.replace(c,function(t,e){return e||l[t]||r.replace(\":\",\"\")})},$.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},$.diff=function(t,f,h){var c,d=g.p(f),$=v(t),l=6e4*($.utcOffset()-this.utcOffset()),y=this-$,M=g.m(this,$);return M=(c={},c[o]=M/12,c[u]=M,c[a]=M/3,c[s]=(y-l)/6048e5,c[i]=(y-l)/864e5,c[r]=y/36e5,c[n]=y/6e4,c[e]=y/1e3,c)[d]||y,h?M:g.a(M)},$.daysInMonth=function(){return this.endOf(u).$D},$.$locale=function(){return M[this.$L]},$.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=D(t,e,!0);return r&&(n.$L=r),n},$.clone=function(){return g.w(this.$d,this)},$.toDate=function(){return new Date(this.valueOf())},$.toJSON=function(){return this.isValid()?this.toISOString():null},$.toISOString=function(){return this.$d.toISOString()},$.toString=function(){return this.$d.toUTCString()},d}(),p=S.prototype;return v.prototype=p,[[\"$ms\",t],[\"$s\",e],[\"$m\",n],[\"$H\",r],[\"$W\",i],[\"$M\",u],[\"$y\",o],[\"$D\",f]].forEach(function(t){p[t[1]]=function(e){return this.$g(e,t[0],t[1])}}),v.extend=function(t,e){return t(e,S,v),v},v.locale=D,v.isDayjs=m,v.unix=function(t){return v(1e3*t)},v.en=M[y],v.Ls=M,v.p={},v});\n","import {getRandomInteger} from \"./utils/common.js\";\nimport {RenderPosition, render} from \"./utils/render.js\";\n\nimport UserRankView from \"./view/user-rank.js\";\nimport FiltersView from \"./view/filters.js\";\n\nimport FooterStatsView from \"./view/footer-stats.js\";\n// import StatsView from \"./view/stats.js\";\n\nimport {generateFilmCard} from \"./mock/film-data.js\";\n\nimport {generateFilters} from \"./mock/filters.js\";\n\nimport MoviesListPresenter from \"./presenter/movies-list.js\";\n\nconst FILMS_MOCK_COUNT = 17;\n\n\nconst films = new Array(FILMS_MOCK_COUNT).fill().map(generateFilmCard);\nconst filters = generateFilters(films);\nconst filmsNumber = getRandomInteger(0, 100000);\n\nconst siteHeaderElement = document.querySelector(`.header`);\nconst siteMainElement = document.querySelector(`.main`);\nconst siteFooterElement = document.querySelector(`.footer`);\n\n// рендер header'a (меню навигации)\nrender(siteHeaderElement, new UserRankView(), RenderPosition.BEFORE_END);\n\n// рендер меню навигации\nrender(siteMainElement, new FiltersView(filters), RenderPosition.BEFORE_END);\n\nconst moviesList = new MoviesListPresenter(siteMainElement);\nmoviesList.init(films);\n\n// // рендер статистики пользователя в main\n// render(siteMainElement, new StatsView(), RenderPosition.BEFORE_END);\n\n// рендер блока статистики в  footer'е\nconst footerStatisticsElement = siteFooterElement.querySelector(`.footer__statistics`);\nrender(footerStatisticsElement, new FooterStatsView(filmsNumber), RenderPosition.BEFORE_END);\n\n","import {getRandomInteger} from \"../utils/common.js\";\n\nconst CommentData = {\n  RANDOM_SENTENCES: [\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit.`,\n    `Cras aliquet varius magna, non porta ligula feugiat eget. Fusce tristique felis at fermentum pharetra.`,\n    `Aliquam id orci ut lectus varius viverra.`,\n    `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n    `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.`,\n    `Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n    `Sed sed nisi sed augue convallis suscipit in sed felis.`,\n    `Aliquam erat volutpat.`,\n    `Nunc fermentum tortor ac porta dapibus.`,\n    `In rutrum ac purus sit amet tempus.`\n  ],\n  EMOJIS: [\n    `./images/emoji/angry.png`,\n    `./images/emoji/puke.png`,\n    `./images/emoji/sleeping.png`,\n    `./images/emoji/smile.png`,\n  ],\n  RANDOM_NAMES: [\n    `Vasiliy`,\n    `Petr`,\n    `Anna`,\n    `Maxim`\n  ]\n};\n\n// генерация адреса эмодзи\nconst generateEmoji = () => {\n  return CommentData.EMOJIS[getRandomInteger(0, CommentData.EMOJIS.length - 1)];\n};\n\n// генерация текста комментария\nconst generateText = () => {\n  return CommentData.RANDOM_SENTENCES[getRandomInteger(0, CommentData.RANDOM_SENTENCES.length - 1)];\n};\n\n// генерация автора комментария\nconst generateName = () => {\n  return CommentData.RANDOM_NAMES[getRandomInteger(0, CommentData.RANDOM_NAMES.length - 1)];\n};\n\n// генерация даты комментария\nconst generateDate = () => {\n  const postDate = new Date(getRandomInteger(1930, 2020), getRandomInteger(1, 12), getRandomInteger(1, 31), getRandomInteger(0, 23), getRandomInteger(0, 59));\n\n  return postDate;\n};\n\n// генерация случайного комментария\nconst generateComment = () => {\n\n  return {\n    emoji: generateEmoji(),\n    text: generateText(),\n    author: generateName(),\n    date: generateDate()\n  };\n};\n\nexport {generateComment};\n","import {getRandomInteger} from \"../utils/common.js\";\nimport {turnMinutesToHours} from \"../utils/date-time.js\";\n\nconst FilmData = {\n  RANDOM_SENTENCES: [\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit.`,\n    `Cras aliquet varius magna, non porta ligula feugiat eget. Fusce tristique felis at fermentum pharetra.`,\n    `Aliquam id orci ut lectus varius viverra.`,\n    `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n    `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.`,\n    `Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n    `Sed sed nisi sed augue convallis suscipit in sed felis.`,\n    `Aliquam erat volutpat.`,\n    `Nunc fermentum tortor ac porta dapibus.`,\n    `In rutrum ac purus sit amet tempus.`\n  ],\n  POSTERS: [\n    `./images/posters/made-for-each-other.png`,\n    `./images/posters/popeye-meets-sinbad.png`,\n    `./images/posters/sagebrush-trail.jpg`,\n    `./images/posters/santa-claus-conquers-the-martians.jpg`,\n    `./images/posters/the-dance-of-life.jpg`\n  ],\n  TITLES: [\n    `Black Mass`,\n    `Guard`,\n    `In Bruges`,\n    `Big Lebowski`\n  ],\n  GENRES: [\n    `comedy`,\n    `drama`,\n    `thriller`,\n    `action`,\n    `biopic`\n  ],\n  DIRECTORS: [\n    `Scott Cooper`,\n    `Martin Scorsese`,\n    `Martin McDonagh`,\n    `Coen`\n  ],\n  SCREENWRITERS: [`Dick Lerr`, `Patrick o'Neil`],\n  CAST: [`J.Depp`, `D.Johnson`, `J.Edgerton`, `B.Camberbetch`],\n  MPAA_RATING: [`G`, `PG`, `PG-13`, `R`, `NC-17`],\n  COUNTRIES: [\n    `Russia`,\n    `USA`,\n    `Ireland`,\n    `S.Korea`\n  ]\n};\n\n\n// генерация адреса обложки фильма\nconst generateCoverImage = () => {\n  return FilmData.POSTERS[getRandomInteger(0, FilmData.POSTERS.length - 1)];\n};\n\n// генерация названия фильма\nconst generateTitle = () => {\n  return FilmData.TITLES[getRandomInteger(0, FilmData.TITLES.length - 1)];\n};\n\n// генерация рейтинга\nconst generateRate = () => {\n  return (getRandomInteger(0, 100) / 10);\n};\n\n// генерация полного описания фильма\nconst generateDescription = () => {\n  const SENTENCES_COUNT_MAX = 5;\n  const sentencesCount = getRandomInteger(1, SENTENCES_COUNT_MAX);\n  const randomDesc = [];\n\n  for (let i = 0; i < sentencesCount; i++) {\n    randomDesc.push(FilmData.RANDOM_SENTENCES[getRandomInteger(0, FilmData.RANDOM_SENTENCES.length - 1)]);\n  }\n\n  return randomDesc.join(` `);\n};\n\n// генерация списка жанров\nconst generateGenres = () => {\n  const maxCount = getRandomInteger(1, FilmData.GENRES.length - 1);\n\n  const genresList = [];\n  for (let i = 0; i < maxCount; i++) {\n    genresList.push(FilmData.GENRES[getRandomInteger(0, FilmData.GENRES.length - 1)]);\n  }\n\n  return genresList;\n};\n\n// генерация даты релиза\nconst generateReleaseDate = () => {\n  return new Date(getRandomInteger(1930, 2020), getRandomInteger(1, 12), getRandomInteger(1, 31));\n};\n\n// генерация длительности\nconst generateDuration = () => {\n  return turnMinutesToHours(getRandomInteger(1, 210));\n};\n\n// генерация имени директора\nconst generateDirector = () => {\n  return FilmData.DIRECTORS[getRandomInteger(0, FilmData.DIRECTORS.length - 1)];\n};\n\n// генерация списка сценаристов\nconst generateScreenwriters = () => {\n  return FilmData.SCREENWRITERS.join(`, `);\n};\n\n// генерация списка актеров\nconst generateCast = () => {\n  return FilmData.CAST.join(`, `);\n};\n\n// генерация возрастного ограничения\nconst generateAgeRestriction = () => {\n  return FilmData.MPAA_RATING[getRandomInteger(0, FilmData.MPAA_RATING.length - 1)];\n};\n\n// генерация страны\nconst generateCountry = () => {\n  return FilmData.COUNTRIES[getRandomInteger(0, FilmData.COUNTRIES.length - 1)];\n};\n\n// генерация случайного id\nconst generateId = () => Date.now() + parseInt(Math.random() * 1000, 10);\n\nconst generateFilmCard = () => {\n\n  const COMMENT_COUNT_MAX = 5;\n\n  return {\n    id: generateId(),\n    cover: generateCoverImage(),\n    title: generateTitle(),\n    rate: generateRate(),\n    releaseDate: generateReleaseDate(),\n    duration: generateDuration(),\n    genres: generateGenres(),\n    description: generateDescription(),\n    commentsCount: getRandomInteger(0, COMMENT_COUNT_MAX),\n    originalTitle: generateTitle(),\n    director: generateDirector(),\n    screenwriters: generateScreenwriters(),\n    cast: generateCast(),\n    country: generateCountry(),\n    ageRestriction: generateAgeRestriction(),\n    isToWatch: Boolean(getRandomInteger(0, 1)),\n    isAlreadyWatched: Boolean(getRandomInteger(0, 1)),\n    isInFavorites: Boolean(getRandomInteger(0, 1))\n  };\n};\n\nexport {generateFilmCard};\n","\nconst filmsToFilterMap = {\n  all: (films) => {\n    return films.length;\n  },\n  watchlist: (films) => {\n    return films.filter((film) => {\n      return film.isToWatch;\n    }).length;\n  },\n  history: (films) => {\n    return films.filter((film) => {\n      return film.isAlreadyWatched;\n    }).length;\n  },\n  favorites: (films) => {\n    return films.filter((film) => {\n      return film.isInFavorites;\n    }).length;\n  }\n};\n\n// генерация фильтров\nconst generateFilters = (films) => {\n  return Object.entries(filmsToFilterMap).map(([filterName, countFilms]) => {\n    return {\n      name: filterName,\n      count: countFilms(films)\n    };\n  });\n};\n\nexport {generateFilters};\n","import {RenderPosition, render, replace, remove} from \"../utils/render.js\";\n\nimport MovieCardView from \"../view/movie-card.js\";\nimport PopupView from \"../view/popup.js\";\n\nexport default class Movie {\n  constructor(container, changeData) {\n    this._container = container;\n\n    this._changeData = changeData;\n\n    this._movieCardView = null;\n    this._newPopupView = null;\n    this._filmCardClickHandler = this._filmCardClickHandler.bind(this);\n    this._closePopupHandler = this._closePopupHandler.bind(this);\n    this._handleWatchlistClick = this._handleWatchlistClick.bind(this);\n    this._handleHistoryClick = this._handleHistoryClick.bind(this);\n    this._handleFavoriteClick = this._handleFavoriteClick.bind(this);\n  }\n\n  init(movie) {\n    this._movie = movie;\n    this._commentsList = movie.comments;\n    const prevMovieView = this._movieCardView;\n    const prevPopupView = this._newPopupView;\n    this._commentsComponent = [];\n\n    this._movieCardView = new MovieCardView(movie);\n    this._newPopupView = new PopupView(movie, this._commentsComponent);\n\n    this._movieCardView.setFilmCardClickHandler(this._filmCardClickHandler);\n\n    this._movieCardView.setWatchlistClickHandler(this._handleWatchlistClick);\n    this._movieCardView.setHistoryClickHandler(this._handleHistoryClick);\n    this._movieCardView.setFavoriteClickHandler(this._handleFavoriteClick);\n\n    this._newPopupView.setClickClosePopupHandler(this._closePopupHandler);\n    this._newPopupView.setEscPressClosePopupHandler(this._closePopupHandler);\n\n    this._newPopupView.setWatchlistClickHandler(this._handleWatchlistClick);\n    this._newPopupView.setHistoryClickHandler(this._handleHistoryClick);\n    this._newPopupView.setFavoriteClickHandler(this._handleFavoriteClick);\n\n    if (prevMovieView === null) {\n      this._renderMovieCard();\n      return;\n    }\n\n    while (this._container.contains(prevMovieView.getElement())) {\n      replace(this._movieCardView, prevMovieView);\n    }\n\n    if (prevPopupView !== null && document.body.contains(prevPopupView.getElement())) {\n      replace(this._newPopupView, prevPopupView);\n      remove(prevPopupView);\n      this._closePopup();\n      this._showPopup();\n    }\n\n    remove(prevMovieView);\n\n  }\n\n  // удаление карточки\n  destroy() {\n    remove(this._movieCardView);\n    remove(this._newPopupView);\n  }\n\n  // обработчик клика на карточку фильма\n  _filmCardClickHandler() {\n    this._showPopup();\n  }\n\n  // рендер одной карточки фильма\n  _renderMovieCard() {\n    render(this._container, this._movieCardView, RenderPosition.BEFORE_END);\n  }\n\n  // показ попапа\n  _showPopup() {\n    document.body.classList.add(`hide-overflow`);\n    document.body.appendChild(this._newPopupView.getElement());\n  }\n\n  // скрытие попапа\n  _closePopup() {\n    document.body.classList.remove(`hide-overflow`);\n    this._newPopupView.reset(this._movie);\n    this._newPopupView.getElement().remove();\n  }\n\n  // обработчик закрытия попапа\n  _closePopupHandler() {\n    this._closePopup();\n  }\n\n  // обработчик нажатия на кнопку \"Add to watchlist\"\n  _handleWatchlistClick() {\n    this._changeData(Object.assign({}, this._movie, {isToWatch: !this._movie.isToWatch}));\n  }\n\n  // обработчик нажатия на кнопку \"Mark as watched\"\n  _handleHistoryClick() {\n    this._changeData(Object.assign({}, this._movie, {isAlreadyWatched: !this._movie.isAlreadyWatched}));\n  }\n\n  // обработчик нажатия на кнопку \"Mark as favorite\"\n  _handleFavoriteClick() {\n    this._changeData(Object.assign({}, this._movie, {isInFavorites: !this._movie.isInFavorites}));\n  }\n}\n","import {RenderPosition, render, remove} from \"../utils/render.js\";\nimport {updateItem, sortByRate} from \"../utils/common.js\";\nimport {SortType} from \"../utils/const.js\";\nimport {sortByDate} from \"../utils/date-time.js\";\nimport {MoviesListData} from \"../utils/const.js\";\n\nimport ShowMoreButtonView from \"../view/show-more.js\";\nimport FilmsListView from \"../view/films-list\";\nimport FilmsWrapperView from \"../view/films-wrapper.js\";\nimport MoviePresenter from \"./movie.js\";\nimport SortMenuView from \"../view/sort-menu.js\";\n\nimport {generateComment} from \"../mock/comment.js\";\n\n\nconst ListTypes = {\n  ALL_MOVIES: {\n    title: `All movies. Upcoming`,\n    isHidden: true,\n    isExtra: false\n  },\n  TOP_RATED: {\n    title: `Top rated`,\n    isHidden: false,\n    isExtra: true\n  },\n  MOST_COMMENTED: {\n    title: `Most commented`,\n    isHidden: false,\n    isExtra: true\n  },\n  EMPTY_LIST: {\n    title: `There are no movies in our database`,\n    isHidden: false,\n    isExtra: false\n  }\n};\n\nconst COMMENTS_QUANTITY = 3;\n\nexport default class MoviesList {\n  constructor(container) {\n    this._container = container;\n    this._filmsWrapperComponent = new FilmsWrapperView();\n    this._showMoreButtonComponent = new ShowMoreButtonView();\n    this._sortMenuComponent = new SortMenuView();\n    this._generateComment = generateComment;\n    this._renderedFilmsCount = MoviesListData.CARDS_MAIN_QUANTITY;\n    this._currentSortButton = SortType.DEFAULT;\n    this._commentsCount = COMMENTS_QUANTITY;\n\n    this._filmsElement = null;\n    this._newPopupItem = null;\n    this._allMoviesContainer = null;\n    this._topRatedContainer = null;\n    this._mostCommentedContainer = null;\n    this._moviePresenter = {};\n    this._moviesList = [];\n    this._filmsContainerList = [];\n    this._comments = [];\n\n    this._handleShowMoreButtonClick = this._handleShowMoreButtonClick.bind(this);\n    this._handleMovieChange = this._handleMovieChange.bind(this);\n    this._handleSortTypeChange = this._handleSortTypeChange.bind(this);\n  }\n\n  init(films) {\n    this._films = films.slice();\n    this._sourceFilms = films.slice();\n\n    if (this._films.length) {\n      this._renderSortMenu();\n    }\n    this._renderContainer();\n    this._renderMoviesLists();\n  }\n\n  // рендер контейнера для списков фильмов\n  _renderContainer() {\n    render(this._container, this._filmsWrapperComponent, RenderPosition.BEFORE_END);\n    this._filmsElement = this._container.querySelector(`.films`);\n  }\n\n  // рендер карточки фильма\n  _renderMovieCard(container, film) {\n    const comments = [];\n    for (let j = 0; j < this._commentsCount; j++) {\n      comments.push(this._generateComment());\n    }\n    film.comments = comments;\n    const moviePresenter = new MoviePresenter(container, this._handleMovieChange);\n    moviePresenter.init(film);\n    this._moviePresenter[film.id] = moviePresenter;\n  }\n\n  // рендер списка карточек фильма\n  _renderMovieCards(container, filmsList, cardsCount) {\n    for (let i = 0; i < Math.min(filmsList.length, cardsCount); i++) {\n      this._renderMovieCard(container, filmsList[i]);\n    }\n    this._moviesList.push(this._moviePresenter);\n    this._moviePresenter = {};\n  }\n\n  // рендер пустого списка - заглушки\n  _renderEmptyList() {\n    const flimsListComponent = new FilmsListView(ListTypes.EMPTY_LIST);\n    this._filmsContainerList.push(flimsListComponent);\n\n    render(this._filmsElement, flimsListComponent, RenderPosition.BEFORE_END);\n  }\n\n  // рендер основного списка фильмов \"All Movies\"\n  _renderAllMoviesList() {\n    const flimsListComponent = new FilmsListView(ListTypes.ALL_MOVIES);\n    this._allMoviesContainer = flimsListComponent.getElement();\n    this._filmsContainerList.push(flimsListComponent);\n\n    this._renderMovieCards(this._allMoviesContainer.querySelector(`.films-list__container`), this._films, MoviesListData.CARDS_MAIN_QUANTITY);\n\n    render(this._filmsElement, flimsListComponent, RenderPosition.BEFORE_END);\n\n    if (this._films.length > MoviesListData.CARDS_MAIN_QUANTITY) {\n      this._renderShowMoreButton();\n    }\n  }\n\n  // рендер дополнительного списка фильмов \"Top Rated\"\n  _renderTopRated() {\n    const flimsListComponent = new FilmsListView(ListTypes.TOP_RATED);\n    this._topRatedContainer = flimsListComponent.getElement();\n    this._filmsContainerList.push(flimsListComponent);\n\n    this._renderMovieCards(this._topRatedContainer.querySelector(`.films-list__container`), this._films, MoviesListData.CARDS_EXTRA_QUANTITY);\n\n    render(this._filmsElement, flimsListComponent, RenderPosition.BEFORE_END);\n  }\n\n  // рендер дополнительного списка фильмов \"Most Commented\"\n  _renderMostCommented() {\n    const flimsListComponent = new FilmsListView(ListTypes.MOST_COMMENTED);\n    this._mostCommentedContainer = flimsListComponent.getElement();\n    this._filmsContainerList.push(flimsListComponent);\n\n    this._renderMovieCards(this._mostCommentedContainer.querySelector(`.films-list__container`), this._films, MoviesListData.CARDS_EXTRA_QUANTITY);\n\n    render(this._filmsElement, flimsListComponent, RenderPosition.BEFORE_END);\n  }\n\n  // рендер основного и дополнительных списков фильмов\n  _renderMainMoviesLists() {\n    this._renderAllMoviesList();\n    this._renderTopRated();\n    this._renderMostCommented();\n  }\n\n  // отрисовка списков фильмов\n  _renderMoviesLists() {\n    return !this._films.length\n      ? this._renderEmptyList()\n      : this._renderMainMoviesLists();\n  }\n\n  // очистка списка фильмов\n  _clearMoviesList() {\n    this._moviesList.forEach((presenter) => {\n      Object\n       .values(presenter)\n       .forEach((presenterItem) => presenterItem.destroy());\n      presenter = {};\n    });\n    this._moviesList = [];\n\n    this._filmsContainerList.forEach((filmContainer) => {\n      remove(filmContainer);\n    });\n    this._filmsContainerList = [];\n  }\n\n  // обработчик изменения фильма\n  _handleMovieChange(updatedMovie) {\n    this._films = updateItem(this._films, updatedMovie);\n\n    this._moviesList.forEach((presenter) => {\n      if (presenter[updatedMovie.id]) {\n        presenter[updatedMovie.id].init(updatedMovie);\n      }\n    });\n  }\n\n  // рендер кнопки show more\n  _renderShowMoreButton() {\n    render(this._allMoviesContainer, this._showMoreButtonComponent, RenderPosition.BEFORE_END);\n\n    this._showMoreButtonComponent.setShowMoreButtonClickHandler(this._handleShowMoreButtonClick);\n\n  }\n\n  // обработчик события нажатия на кнопку show more\n  _handleShowMoreButtonClick() {\n    this._renderMovieCards(\n        this._allMoviesContainer.querySelector(`.films-list__container`),\n        this._films\n      .slice(this._renderedFilmsCount, this._renderedFilmsCount + MoviesListData.CARDS_MAIN_QUANTITY),\n        MoviesListData.CARDS_MAIN_QUANTITY);\n\n    this._renderedFilmsCount += MoviesListData.CARDS_MAIN_QUANTITY;\n\n    if (this._renderedFilmsCount >= this._films.length) {\n      remove(this._showMoreButtonComponent);\n    }\n  }\n\n  // сортировка фильмов по дате и рейтингу\n  _sortMovies(sortButton) {\n    switch (sortButton) {\n      case SortType.BY_DATE:\n        this._films.sort(sortByDate);\n        break;\n      case SortType.BY_RATE:\n        this._films.sort(sortByRate);\n        break;\n      default:\n        this._films = this._sourceFilms.slice();\n    }\n    this._currentSortButton = sortButton;\n  }\n\n  // обработчик нажатия на кнопку сортировки\n  _handleSortTypeChange(sortButton) {\n    if (this._currentSortButton === sortButton) {\n      return;\n    }\n\n    this._sortMenuComponent.getElement().querySelector(`[data-sort-type=${this._currentSortButton}]`).classList.remove(`sort__button--active`);\n    this._sortMenuComponent.getElement().querySelector(`[data-sort-type=${sortButton}]`).classList.add(`sort__button--active`);\n\n    this._sortMovies(sortButton);\n    this._clearMoviesList();\n    this._renderMoviesLists();\n  }\n\n  // рендер меню фильтров\n  _renderSortMenu() {\n    render(this._container, this._sortMenuComponent, RenderPosition.BEFORE_END);\n    this._sortMenuComponent.setSortTypeChangeHandler(this._handleSortTypeChange);\n  }\n\n}\n","// рандомизатор\nconst getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\n// обрезание текстового фрагмента до 140 символов\nconst getShortText = (text) => {\n  const MAX_TEXT_LENGTH = 140;\n  return text.length > MAX_TEXT_LENGTH\n    ? `${text.slice(0, MAX_TEXT_LENGTH - 2)}...`\n    : text;\n};\n\n// обновление данных\nconst updateItem = (items, update) => {\n  const index = items.findIndex((item) => item.id === update.id);\n\n  if (index === -1) {\n    return items;\n  }\n\n  return [\n    ...items.slice(0, index),\n    update,\n    ...items.slice(index + 1)\n  ];\n};\n\n// сортировка по рейтингу\nconst sortByRate = (movieA, movieB) => movieB.rate - movieA.rate;\n\nexport {\n  getRandomInteger,\n  getShortText,\n  updateItem,\n  sortByRate\n};\n\n","const SortType = {\n  DEFAULT: `default`,\n  BY_DATE: `by-date`,\n  BY_RATE: `by-rate`\n};\n\nconst FilterNames = {\n  all: `All movies`,\n  watchlist: `Watchlist`,\n  history: `History`,\n  favorites: `Favorites`\n};\n\nconst FilmDetails = {\n  director: `Director`,\n  screenwriters: `Writers`,\n  cast: `Actors`,\n  releaseDate: `Release Date`,\n  duration: `Runtime`,\n  country: `Country`,\n  genres: `Genres`,\n  genre: `Genre`\n};\n\nconst MoviesListData = {\n  CARDS_MAIN_QUANTITY: 5,\n  CARDS_EXTRA_QUANTITY: 2,\n  CARDS_EMPTY_QUANTITY: 0\n};\n\nexport {\n  SortType,\n  FilterNames,\n  FilmDetails,\n  MoviesListData\n};\n","import dayjs from \"dayjs\";\n\n// перевод минут в часы\nconst turnMinutesToHours = (number) => {\n  const MINUTES_IN_HOUR = 60;\n  const hours = Math.floor(number / MINUTES_IN_HOUR);\n  const minutes = number % MINUTES_IN_HOUR;\n\n  return hours < 1\n    ? `${minutes}m`\n    : `${hours}h ${minutes}m`;\n};\n\n// формирование даты в формате (год)\nconst getYDate = (date) => {\n  return dayjs(date).format(`YYYY`);\n};\n\n// формирование даты в формате (день месяц год)\nconst getDMYDate = (date) => {\n  return dayjs(date).format(`DD MMMM YYYY`);\n};\n\n// формирование даты в формате (год / месяц / день часы : минуты)\nconst getYMDHMDate = (date) => {\n  return dayjs(date).format(`YYYY/MM/DD HH:mm`);\n};\n\n// определение разницы в дате\nconst sortByDate = (movieA, movieB) => dayjs(movieB.releaseDate).diff(movieA.releaseDate);\n\n\nexport {\n  turnMinutesToHours,\n  getYDate,\n  getDMYDate,\n  getYMDHMDate,\n  sortByDate\n};\n","import Abstract from \"../view/abstract.js\";\n\nconst RenderPosition = {\n  BEFORE_END: `beforeend`,\n  AFTER_BEGIN: `afterbegin`\n};\n\nconst KeyBindings = {\n  ESCAPE: `Escape`,\n  ENTER: `Enter`\n};\n\n// рендер шаблона\nconst renderTemplate = (container, template, place) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  container.insertAdjacentHTML(place, template);\n};\n\n// рендер DOM-элемента\nconst render = (container, child, place = RenderPosition.BEFORE_END) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  if (child instanceof Abstract) {\n    child = child.getElement();\n  }\n\n  switch (place) {\n    case RenderPosition.AFTER_BEGIN:\n      container.prepend(child);\n      break;\n    case RenderPosition.BEFORE_END:\n      container.append(child);\n      break;\n  }\n};\n\n// создание DOM-элемента\nconst createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n  return newElement.firstChild;\n};\n\n// замена одного экземпляра Abstract на другой\nconst replace = (newChild, oldChild) => {\n  if (oldChild instanceof Abstract) {\n    oldChild = oldChild.getElement();\n  }\n\n  if (newChild instanceof Abstract) {\n    newChild = newChild.getElement();\n  }\n\n  const parent = oldChild.parentElement;\n\n  if (parent === null || oldChild === null || newChild === null) {\n    throw new Error(`Can't replace unexisting elements`);\n  }\n\n  parent.replaceChild(newChild, oldChild);\n};\n\n// удаление компонента\nconst remove = (component) => {\n  if (!(component instanceof Abstract)) {\n    throw new Error(`Can remove only components`);\n  }\n  component.getElement().remove();\n  component.removeElement();\n};\n\nexport {\n  RenderPosition,\n  KeyBindings,\n  renderTemplate,\n  render,\n  createElement,\n  replace,\n  remove\n};\n","import {createElement} from \"../utils/render.js\";\n\nexport default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error(`Can't instantiate Abstract, only concrete one.`);\n    }\n\n    this._element = null;\n    this._callback = {};\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n\n","import Abstract from \"./abstract.js\";\n\nconst createFilmsListTemplate = (listType) => {\n  const {title, isHidden, isExtra} = listType;\n  return (\n    `<section class=\"films-list\n    ${isExtra\n      ? ` films-list--extra`\n      : ``\n    }\">\n      <h2 class=\"films-list__title ${isHidden\n      ? ` visually-hidden`\n      : ``\n    }\">${title}</h2>\n\n      <div class=\"films-list__container\">\n\n      </div>\n     </section>`\n  );\n};\n\n\nexport default class FilmsList extends Abstract {\n  constructor(listType) {\n    super();\n    this._element = null;\n    this._listType = listType;\n  }\n\n  getTemplate() {\n    return createFilmsListTemplate(this._listType);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFilmsSectionTemplate = () => {\n  return (\n    `<section class=\"films\">\n\n     </section>`\n  );\n};\n\nexport default class FilmsWrapper extends AbstractView {\n  getTemplate() {\n    return createFilmsSectionTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport {FilterNames} from \"../utils/const.js\";\n\nconst createFilterItemTemplate = (filter, isActive) => {\n  const {name, count} = filter;\n\n  return (\n    `<a\n      href=\"#${name}\"\n      class=\"main-navigation__item ${isActive\n      ? `main-navigation__item--active`\n      : ``}\"\n    >\n      ${FilterNames[name]}\n\n      ${name !== `all`\n      ? `<span class=\"main-navigation__item-count\">\n            ${count}\n          </span>`\n      : ``\n    }\n    </a>`\n  );\n};\n\nconst createNavMenuTemplate = (filters) => {\n  const filterItemsTemplate = filters\n  .map((filter, isActive) => createFilterItemTemplate(filter, isActive === false)).join(``);\n\n  return (\n    `<nav class=\"main-navigation\">\n      <div class=\"main-navigation__items\">\n        ${filterItemsTemplate}\n      </div>\n        <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n    </nav>`);\n};\n\n\nexport default class Filters extends AbstractView {\n  constructor(filters) {\n    super();\n    this._filters = filters;\n  }\n\n  getTemplate() {\n    return createNavMenuTemplate(this._filters);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFilmsStatistics = (number) => {\n  return `<p>${number} movies inside</p>`;\n};\n\nexport default class FooterStats extends AbstractView {\n  constructor(number) {\n    super();\n    this._number = number;\n  }\n\n  getTemplate() {\n    return createFilmsStatistics(this._number);\n  }\n}\n","import {getYDate} from \"../utils/date-time.js\";\nimport {getShortText} from \"../utils/common.js\";\nimport AbstractView from \"./abstract.js\";\n\nconst createFilmArticle = (filmCard) => {\n  let {cover, title, rate, releaseDate, duration, genres, description, commentsCount, isToWatch, isAlreadyWatched, isInFavorites} = filmCard;\n\n  const controls = [\n    {\n      name: `Add to watchlist`,\n      modifier: `add-to-watchlist`,\n      isActive: isToWatch\n    },\n    {\n      name: `Mark as watched`,\n      modifier: `mark-as-watched`,\n      isActive: isAlreadyWatched\n    },\n    {\n      name: `Mark as favorite`,\n      modifier: `favorite`,\n      isActive: isInFavorites\n    }\n  ];\n\n  const shortDescription = getShortText(description);\n  const genre = genres[0];\n\n  return (\n    `<article class=\"film-card\">\n        <h3 class=\"film-card__title\">${title}</h3>\n        <p class=\"film-card__rating\">${rate}</p>\n        <p class=\"film-card__info\">\n          <span class=\"film-card__year\">${getYDate(releaseDate)}</span>\n          <span class=\"film-card__duration\">${duration}</span>\n          <span class=\"film-card__genre\">${genre}</span>\n        </p>\n        <img src=\"${cover}\" alt=\"${title}\" class=\"film-card__poster\">\n        <p class=\"film-card__description\">${shortDescription}</p>\n        <a class=\"film-card__comments\">${commentsCount} comments</a>\n        <div class=\"film-card__controls\">\n           ${controls.map(({name, modifier, isActive}) => {\n      return (\n        `<button class=\"film-card__controls-item button film-card__controls-item--${modifier}\n        ${isActive\n          ? ` film-card__controls-item--active`\n          : ``}\"\n         type=\"button\">${name}</button>`\n      );\n    }).join(``)}\n\n        </div>\n     </article>`\n  );\n};\n\nexport default class MovieCard extends AbstractView {\n  constructor(filmCard) {\n    super();\n    this._filmCard = filmCard;\n    this._filmCardClickHandler = this._filmCardClickHandler.bind(this);\n    this._watchlistClickHandler = this._watchlistClickHandler.bind(this);\n    this._historyClickHandler = this._historyClickHandler.bind(this);\n    this._favoriteClickHandler = this._favoriteClickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createFilmArticle(this._filmCard);\n  }\n\n  _filmCardClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  _watchlistClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.watchlistClick();\n  }\n\n  _historyClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.historyClick();\n  }\n\n  _favoriteClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.favoriteClick();\n  }\n\n  setFilmCardClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().querySelector(`.film-card__title`).addEventListener(`click`, this._filmCardClickHandler);\n    this.getElement().querySelector(`.film-card__poster`).addEventListener(`click`, this._filmCardClickHandler);\n    this.getElement().querySelector(`.film-card__comments`).addEventListener(`click`, this._filmCardClickHandler);\n  }\n\n  setWatchlistClickHandler(callback) {\n    this._callback.watchlistClick = callback;\n    this.getElement().querySelector(`.film-card__controls-item--add-to-watchlist`).addEventListener(`click`, this._watchlistClickHandler);\n  }\n\n  setHistoryClickHandler(callback) {\n    this._callback.historyClick = callback;\n    this.getElement().querySelector(`.film-card__controls-item--mark-as-watched`).addEventListener(`click`, this._historyClickHandler);\n  }\n\n  setFavoriteClickHandler(callback) {\n    this._callback.favoriteClick = callback;\n    this.getElement().querySelector(`.film-card__controls-item--favorite`).addEventListener(`click`, this._favoriteClickHandler);\n  }\n}\n","import {getDMYDate, getYMDHMDate} from \"../utils/date-time.js\";\nimport {KeyBindings} from \"../utils/render.js\";\nimport {FilmDetails} from \"../utils/const.js\";\nimport SmartView from \"./smart.js\";\n\n\n// создание шаблона сведения о фильме\nconst createFilmDetailItemTemplate = (detail, detailName) => {\n\n  return (\n    `<tr class=\"film-details__row\">\n      <td class=\"film-details__term\">${FilmDetails[detailName]}</td>\n      <td class=\"film-details__cell\">${detail}</td>\n    </tr>`);\n};\n\n// создание элемента эмоджи\nconst createEmojiItem = (emoji) => {\n  return (`<input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-${emoji}\" value=\"${emoji}\">\n           <label class=\"film-details__emoji-label\" for=\"emoji-${emoji}\">\n            <img src=\"./images/emoji/${emoji}.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n           </label>`);\n};\n\n// создание списка эмоджи\nconst createEmojiSection = (emojiList) => {\n  let emojiSection = ``;\n  for (let i = 0; i < emojiList.length; i++) {\n    emojiSection += createEmojiItem(emojiList[i]);\n  }\n  return (emojiSection);\n};\n\n// создание комментария\nconst createCommentItem = (comment) => {\n  const {emoji, text, author, date} = comment;\n\n  return (\n    `<li class=\"film-details__comment\">\n      <span class=\"film-details__comment-emoji\">\n        <img src=\"${emoji}\" width=\"55\" height=\"55\" alt=\"emoji-smile\">\n      </span>\n      <div>\n        <p class=\"film-details__comment-text\">${text}</p>\n        <p class=\"film-details__comment-info\">\n          <span class=\"film-details__comment-author\">${author}</span>\n          <span class=\"film-details__comment-day\">${getYMDHMDate(date)}</span>\n          <button class=\"film-details__comment-delete\">Delete</button>\n        </p>\n      </div>\n    </li>`\n  );\n};\n\n// создание списка комментариев\nconst createCommentsSection = (comments) => {\n  let commentsSection = ``;\n  for (let i = 0; i < comments.length; i++) {\n    commentsSection += createCommentItem(comments[i]);\n  }\n  return (commentsSection);\n};\n\n// создание шаблона информации о фильме\nconst createPopUpTemplate = (data) => {\n\n  const {cover, title, rate, description, originalTitle, ageRestriction, releaseDate, duration, genres, director, screenwriters, cast, country, isToWatch, isAlreadyWatched, isInFavorites, commentEmoji, newComment, comments} = data;\n\n  const controls = [\n    {\n      name: `Add to watchlist`,\n      modifier: `watchlist`,\n      isActive: isToWatch\n    },\n    {\n      name: `Already watched`,\n      modifier: `watched`,\n      isActive: isAlreadyWatched\n    },\n    {\n      name: `Add to favorites`,\n      modifier: `favorite`,\n      isActive: isInFavorites\n    }\n  ];\n\n  const emojis = [\n    `smile`,\n    `sleeping`,\n    `puke`,\n    `angry`\n  ];\n\n  const genresTemplate = genres.map((item) => `<span class=\"film-details__genre\">${item}</span>`).join(``);\n\n  return (\n    `<section class=\"film-details\">\n      <form class=\"film-details__inner\" action=\"\" method=\"get\">\n        <div class=\"film-details__top-container\">\n          <div class=\"film-details__close\">\n            <button class=\"film-details__close-btn\" type=\"button\">close</button>\n          </div>\n          <div class=\"film-details__info-wrap\">\n            <div class=\"film-details__poster\">\n              <img class=\"film-details__poster-img\" src=\"${cover}\" alt=\"\">\n\n              <p class=\"film-details__age\">${ageRestriction}</p>\n            </div>\n\n            <div class=\"film-details__info\">\n              <div class=\"film-details__info-head\">\n                <div class=\"film-details__title-wrap\">\n                  <h3 class=\"film-details__title\">${title}</h3>\n                  <p class=\"film-details__title-original\">Original: ${originalTitle}</p>\n                </div>\n\n                <div class=\"film-details__rating\">\n                  <p class=\"film-details__total-rating\">${rate}</p>\n                </div>\n              </div>\n\n              <table class=\"film-details__table\">\n                ${createFilmDetailItemTemplate(director, `director`)}\n                ${createFilmDetailItemTemplate(screenwriters, `screenwriters`)}\n                ${createFilmDetailItemTemplate(cast, `cast`)}\n                ${createFilmDetailItemTemplate(getDMYDate(releaseDate), `releaseDate`)}\n                ${createFilmDetailItemTemplate(duration, `duration`)}\n                ${createFilmDetailItemTemplate(country, `country`)}\n                ${createFilmDetailItemTemplate(genresTemplate, `${\n      genres.length === 1\n        ? `genre`\n        : `genres`}`)}\n                </tr>\n              </table>\n\n              <p class=\"film-details__film-description\">\n                    ${description}\n              </p>\n            </div>\n          </div>\n\n          <section class=\"film-details__controls\">\n            ${controls.map(({name, modifier, isActive}) => {\n      return (`\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"${modifier}\" name=\"${modifier}\" ${isActive\n          ? `checked`\n          : ``}>\n            <label for=\"${modifier}\" class=\"film-details__control-label film-details__control-label--${modifier}\">${name}</label>\n            `);\n    }).join(``)}\n          </section>\n        </div>\n\n        <div class=\"film-details__bottom-container\">\n          <section class=\"film-details__comments-wrap\">\n            <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n\n            <ul class=\"film-details__comments-list\">\n              ${createCommentsSection(comments)}\n            </ul>\n\n            <div class=\"film-details__new-comment\">\n              <div class=\"film-details__add-emoji-label\">\n              ${commentEmoji\n      ? `<img src=\"./images/emoji/${commentEmoji}.png\" width=\"55\" height=\"55\" alt=\"emoji-${commentEmoji}\">`\n      : ``}\n              </div>\n\n              <label class=\"film-details__comment-label\">\n                <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\">${newComment\n      ? `${newComment}</textarea>`\n      : `</textarea>`}\n\n              </label>\n\n              <div class=\"film-details__emoji-list\">\n                  ${createEmojiSection(emojis)}\n              </div>\n            </div>\n          </section>\n        </div>\n      </form>\n    </section>`\n  );\n};\n\nexport default class Popup extends SmartView {\n  constructor(filmCard) {\n    super();\n    this._data = Popup.parseFilmToData(filmCard);\n    this._scrollPosition = 0;\n\n    this._clickClosePopupHandler = this._clickClosePopupHandler.bind(this);\n    this._escPressClosePopupHandler = this._escPressClosePopupHandler.bind(this);\n    this._watchlistClickHandler = this._watchlistClickHandler.bind(this);\n    this._historyClickHandler = this._historyClickHandler.bind(this);\n    this._favoriteClickHandler = this._favoriteClickHandler.bind(this);\n    this._formSubmitHandler = this._formSubmitHandler.bind(this);\n    this._emojiChangeHandler = this._emojiChangeHandler.bind(this);\n    this._commentInputHandler = this._commentInputHandler.bind(this);\n\n    this._setInnerHandlers();\n  }\n\n  getTemplate() {\n    return createPopUpTemplate(this._data, this._commentsComponent);\n  }\n\n  _clickClosePopupHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  _escPressClosePopupHandler(evt) {\n    if (evt.key === KeyBindings.ESCAPE && document.body.contains(this.getElement())) {\n      evt.preventDefault();\n      this._callback.escKeydown();\n    }\n  }\n\n  _watchlistClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.watchlistClick();\n  }\n\n  _historyClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.historyClick();\n  }\n\n  _favoriteClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.favoriteClick();\n  }\n\n  _formSubmitHandler(evt) {\n    evt.preventDefault();\n    this.callback.formSubmit(Popup.parseDataToFilm(this._data));\n  }\n\n  setClickClosePopupHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().querySelector(`.film-details__close-btn`).addEventListener(`click`, this._clickClosePopupHandler);\n  }\n\n  setEscPressClosePopupHandler(callback) {\n    this._callback.escKeydown = callback;\n    document.addEventListener(`keydown`, this._escPressClosePopupHandler);\n  }\n\n  setWatchlistClickHandler(callback) {\n    this._callback.watchlistClick = callback;\n    this.getElement().querySelector(`.film-details__control-label--watchlist`).addEventListener(`click`, this._watchlistClickHandler);\n  }\n\n  setHistoryClickHandler(callback) {\n    this._callback.historyClick = callback;\n    this.getElement().querySelector(`.film-details__control-label--watched`).addEventListener(`click`, this._historyClickHandler);\n  }\n\n  setFavoriteClickHandler(callback) {\n    this._callback.favoriteClick = callback;\n    this.getElement().querySelector(`.film-details__control-label--favorite`).addEventListener(`click`, this._favoriteClickHandler);\n  }\n\n  setFormSubmitHandler(callback) {\n    this._callback.formSubmit = callback;\n    this.getElement().querySelector(`form`).addEventListener(`submit`, this._formSubmitHandler);\n  }\n\n  static parseFilmToData(film) {\n    return Object.assign(\n        {},\n        film,\n        {\n          commentEmoji: null,\n          newComment: null\n        }\n    );\n  }\n\n  static parseDataToFilm(data) {\n    data = Object.assign({}, data);\n\n    if (!data.commentEmoji) {\n      data.commentEmoji = null;\n    }\n\n    if (!data.newComment) {\n      data.newComment = null;\n    }\n\n    delete data.commentEmoji;\n    delete data.newComment;\n\n    return data;\n  }\n\n  _emojiChangeHandler(evt) {\n    evt.preventDefault();\n    this._scrollPosition = this.getElement().scrollTop;\n\n    this.updateData({\n      commentEmoji: evt.target.value,\n    });\n  }\n\n  _commentInputHandler(evt) {\n    evt.preventDefault();\n\n    this._scrollPosition = this.getElement().scrollTop;\n    this.updateData({\n      newComment: evt.target.value,\n    }, true);\n  }\n\n  _setInnerHandlers() {\n    this.getElement().querySelector(`.film-details__close-btn`).addEventListener(`click`, this._clickClosePopupHandler);\n    document.addEventListener(`keydown`, this._escPressClosePopupHandler);\n\n    this.getElement().querySelector(`.film-details__control-label--watchlist`).addEventListener(`click`, this._watchlistClickHandler);\n    this.getElement().querySelector(`.film-details__control-label--watched`).addEventListener(`click`, this._historyClickHandler);\n    this.getElement().querySelector(`.film-details__control-label--favorite`).addEventListener(`click`, this._favoriteClickHandler);\n    this.getElement().querySelector(`form`).addEventListener(`submit`, this._formSubmitHandler);\n\n    this.getElement().querySelector(`.film-details__emoji-list`).addEventListener(`change`, this._emojiChangeHandler);\n    this.getElement().querySelector(`.film-details__comment-input`).addEventListener(`input`, this._commentInputHandler);\n\n  }\n\n  restoreHandlers() {\n    document.removeEventListener(`keydown`, this._escPressClosePopupHandler);\n    this._setInnerHandlers();\n    this.getElement().scrollTop = this._scrollPosition;\n  }\n\n  reset(film) {\n    this.updateData(\n        Popup.parseFilmToData(film)\n    );\n  }\n\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createShowMoreButton = () => {\n  return `<button class=\"films-list__show-more\">Show more</button>`;\n};\n\nexport default class ShowMoreButton extends AbstractView {\n  constructor() {\n    super();\n    this._showMoreButtonClickHandler = this._showMoreButtonClickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createShowMoreButton();\n  }\n\n  _showMoreButtonClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setShowMoreButtonClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().addEventListener(`click`, this._showMoreButtonClickHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nexport default class Smart extends AbstractView {\n  constructor() {\n    super();\n    this._data = {};\n  }\n\n  updateData(update, justDataUpdating) {\n    if (!update) {\n      return;\n    }\n\n    this._data = Object.assign(\n        {},\n        this._data,\n        update\n    );\n\n    if (justDataUpdating) {\n      return;\n    }\n\n    this.updateElement();\n  }\n\n  updateElement() {\n    let prevElement = this.getElement();\n    const parent = prevElement.parentElement;\n    this.removeElement();\n\n    const newElement = this.getElement();\n\n    parent.replaceChild(newElement, prevElement);\n\n    this.restoreHandlers();\n  }\n\n  restoreHandlers() {\n    throw new Error(`Abstract method not implemented: reserHadlsers`);\n  }\n\n}\n","import AbstractView from \"./abstract.js\";\nimport {SortType} from \"../utils/const.js\";\n\nconst createSortMenuTemplate = () => {\n  return (\n    `<ul class=\"sort\">\n      <li><a href=\"#\" class=\"sort__button sort__button--active\" data-sort-type=${SortType.DEFAULT}>Sort by default</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=${SortType.BY_DATE}>Sort by date</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=${SortType.BY_RATE}>Sort by rating</a></li>\n    </ul>`\n  );\n};\n\nexport default class SortMenu extends AbstractView {\n  constructor() {\n    super();\n    this._sortTypeChangeHandler = this._sortTypeChangeHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createSortMenuTemplate();\n  }\n\n  _sortTypeChangeHandler(evt) {\n    evt.preventDefault();\n    this._callback.sortTypeChange(evt.target.dataset.sortType);\n  }\n\n  setSortTypeChangeHandler(callback) {\n    this._callback.sortTypeChange = callback;\n    this.getElement().addEventListener(`click`, this._sortTypeChangeHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createProfileTemplate = () => {\n  return (\n    `<section class=\"header__profile profile\">\n      <p class=\"profile__rating\">Sci-Fighter</p>\n      <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`\n  );\n};\n\nexport default class UserRank extends AbstractView {\n  getTemplate() {\n    return createProfileTemplate();\n  }\n}\n"],"sourceRoot":""}